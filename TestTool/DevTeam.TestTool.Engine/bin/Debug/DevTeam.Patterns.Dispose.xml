<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevTeam.Patterns.Dispose</name>
    </assembly>
    <members>
        <member name="T:DevTeam.Patterns.Dispose.CompositeDisposable">
            <summary>
            Represents a group of Disposables that are disposed together.
            </summary>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.#ctor">
            <summary>
            Initializes a new instance of the CompositeDisposable class.
            </summary>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.#ctor(System.Collections.Generic.IEnumerable{System.IDisposable})">
            <summary>
            Initializes a new instance of the CompositeDisposable class from a group of disposables.
            </summary>
            <param name="items">The disposables that will be disposed together.</param>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.#ctor(System.IDisposable[])">
            <summary>
            Initializes a new instance of the CompositeDisposable class from a group of disposables.
            </summary>
            <param name="items">The disposables that will be disposed together.</param>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.Dispose">
            <summary>
            Disposes all disposables in the group and removes them from the group.
            </summary>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.Add(System.IDisposable)">
            <summary>
            Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.
            </summary>
            <param name="disposable">The disposable to add.</param>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.Remove(System.IDisposable)">
            <summary>
            Removes and disposes the first occurrence of a disposable from the CompositeDisposable.
            </summary>
            <param name="disposable">The disposable to remove.</param>
            <returns><c>False</c> if has no item.</returns>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.CompositeDisposable.Clear">
            <summary>
            Removes and disposes all disposables from the GroupDisposable, but does not dispose the CompositeDisposable.
            </summary>
        </member>
        <member name="T:DevTeam.Patterns.Dispose.Disposable">
            <summary>
            A set of extsnsions for disposables.
            </summary>
            <example>    
            <code>
            var disposable = Disposable.Create(() => System.Console.WriteLine("Disposed."));
            disposable.Dispose();
            </code>
            </example>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.Disposable.Create(System.Action)">
            <summary>
            Creates disposable which does the action when disposing.
            </summary>
            <param name="disposeAction"></param>
            <returns></returns>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.Disposable.Empty">
            <summary>
            Creates disposable which does nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DevTeam.Patterns.Dispose.SerialDisposable">
            <summary>
            Represents a disposable whose underlying disposable can be swapped for another disposable which causes the previous underlying disposable to be disposed.
            </summary>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.SerialDisposable.#ctor">
            <summary>
            Initializes a new instance of the SerialDisposable class.
            </summary>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.SerialDisposable.#ctor(System.IDisposable)">
            <summary>
            Initializes a new instance of the SerialDisposable class and initialize the underlying disposable.
            </summary>
            <param name="disposable">The underlying disposable.</param>
        </member>
        <member name="M:DevTeam.Patterns.Dispose.SerialDisposable.Dispose">
            <summary>
            Disposes all disposables in the group and removes them from the group.
            </summary>
        </member>
        <member name="P:DevTeam.Patterns.Dispose.SerialDisposable.Disposable">
            <summary>
            Gets or sets the underlying disposable.
            </summary>
            <remarks>
            If the SerialDisposable has already been disposed, assignment to this property causes immediate disposal of the given disposable object. Assigning this property disposes the previous disposable object.
            </remarks>
        </member>
    </members>
</doc>
